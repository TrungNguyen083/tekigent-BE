// <auto-generated />
using System;
using Certificate.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Certificate.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Certificate.Domain.Entities.Collection", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("NoOfProject")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Collections");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Mentor", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("MentorName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("MentorImgSrc")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Mentors");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Project", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int?>("CollectionId")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ProjectBgImage")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("LastUpdated")
                    .HasColumnType("datetime2");

                b.Property<int>("CredentialsNo")
                    .HasColumnType("int");

                b.Property<int>("UnpublishedNo")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CollectionId");

                b.ToTable("Projects");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Course", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("CourseName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("IdentifierId")
                    .HasColumnType("int");

                b.Property<string>("CourseWebsite")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Skills")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Primary")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("BgImgSrc")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("CertificateImage")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("BadgeImage")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("PublishAt")
                    .HasColumnType("datetime2");

                b.Property<int>("Like")
                    .HasColumnType("int");

                b.Property<int>("NoOfMembers")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("LastUpdated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("IdentifierId");

                b.ToTable("Courses");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.ProjectCourse", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("ProjectId")
                    .HasColumnType("int");

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ProjectId");

                b.HasIndex("CourseId");

                b.ToTable("ProjectCourse");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Student", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ImgSrc")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNo")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Address")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Students");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.CourseStudent", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.Property<int>("StudentId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CourseId");

                b.HasIndex("StudentId");

                b.ToTable("CourseStudent");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.UserInfo", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("IssueDate")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PublishId")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("CourseId");

                b.ToTable("UserInfos");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.UserInfo", b =>
            {
                b.HasOne("Certificate.Domain.Entities.Course", "Course")
                    .WithMany("UserInfos")
                    .HasForeignKey("CourseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Course");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Project", b =>
            {
                b.HasOne("Certificate.Domain.Entities.Collection", "Collection")
                    .WithMany("Projects")
                    .HasForeignKey("CollectionId");

                b.Navigation("Collection");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Course", b =>
            {
                b.HasOne("Certificate.Domain.Entities.Mentor", "Mentor")
                    .WithMany("Courses")
                    .HasForeignKey("IdentifierId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Mentor");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.ProjectCourse", b =>
            {
                b.HasOne("Certificate.Domain.Entities.Project", "Project")
                    .WithMany("ProjectCourses")
                    .HasForeignKey("ProjectId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Certificate.Domain.Entities.Course", "Course")
                    .WithMany("ProjectCourses")
                    .HasForeignKey("CourseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Project");

                b.Navigation("Course");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.CourseStudent", b =>
            {
                b.HasOne("Certificate.Domain.Entities.Course", "Course")
                    .WithMany("CourseStudents")
                    .HasForeignKey("CourseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Certificate.Domain.Entities.Student", "Student")
                    .WithMany("CourseStudents")
                    .HasForeignKey("StudentId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Course");

                b.Navigation("Student");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Collection", b =>
            {
                b.Navigation("Projects");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Course", b =>
            {
                b.Navigation("UserInfos");
                b.Navigation("ProjectCourses");
                b.Navigation("CourseStudents");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Project", b =>
            {
                b.Navigation("ProjectCourses");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Student", b =>
            {
                b.Navigation("CourseStudents");
            });

            modelBuilder.Entity("Certificate.Domain.Entities.Mentor", b =>
            {
                b.Navigation("Courses");
            });

#pragma warning restore 612, 618
        }
    }
}
